import React, { useEffect, useState } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { GameMenu } from '../src/components/GameMenu'
import { useRouter } from 'next/router'
import { CustomModal } from '../src/components/ui/modal'
import { GameOptions } from '../src/components/GameOptions'
import { GameInstructions } from '../src/components/GameInstructions'
import { useGetOnlineUsers, useUpdateOnlineStatus } from '../src/hooks/users'
import { useSession, signIn, signOut } from "next-auth/react"
import Layout from '../src/layout/layout'


const Home: NextPage = () => {
  const [showOptions, setShowOptions] = useState<boolean>(false)
  const [showInstructions, setShowInstructions] = useState<boolean>(false);
  const [isModalOpen, setModalOpen] = useState<boolean>(false)
  const [onlineIndicator, setOnlineIndicator] = useState(0);
  const router = useRouter()

  function startGame() {
    router.push('/Game')
  }

  function viewOptions() {
    setModalOpen(currentState => !currentState)
    setShowOptions(currentState => !currentState)
    setShowInstructions(false)
  }

  function viewInstructions() {
    setModalOpen(currentState => !currentState)
    setShowInstructions(currentState => !currentState)
    setShowOptions(false)
  }

  function closeModal() {
    setModalOpen(currentState => !currentState)
  }

  const { users } = useGetOnlineUsers();

  const auth = false;

  const { data: session } = useSession()

  const {updateOnlineStatus} = useUpdateOnlineStatus();

  useEffect(() => {
    // Every 20s, run a mutation to tell the backend that you're online
    updateOnlineStatus()
    setOnlineIndicator(setInterval(() => updateOnlineStatus(), 20000));

    return () => {
      // Clean up
      clearInterval(onlineIndicator);
    };
}, []);


  return (
    <Layout>
      <div className={styles.container}>
      <Head>
        <title>Frodle</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <GameMenu startGame={startGame} viewOptions={viewOptions} viewInstructions={viewInstructions} />
      </main>
      <CustomModal show={isModalOpen} close={closeModal}>
        <>
        {
          showOptions ? <GameOptions /> : null
        }
        {
          showInstructions ? <GameInstructions /> : null
        }
        </>
      </CustomModal>
    </div>
    </Layout>
  )
}

export default Home
